#include<Windows.h>
#include <iostream>

void _declspec(naked) hashcode() {
	__asm {
		push ebp
		mov ebp,esp
		sub esp,0xc
		push esi
		push ebx
		push ecx
		push edx
		mov dword ptr [ebp-0x4],0

		//循环准备阶段
		mov esi, [ebp + 0x8] //strname地址
		xor eax, eax //eax清零
		xor ecx,ecx
	tag_loop:
		mov al, [esi + ecx] //获取第ecx个字符
		test al, al //检查是否为字符串结束符
		jz tag_out_loop //如果是字符串结束符则跳出循环
		mov ebx, [ebp - 0x4]
		shl ebx, 0x19 //左移25位
		mov edx, [ebp-0x4]
		shr edx, 0x7 //右移7位
		or ebx,edx
		add ebx, eax //加上第一个字符
		mov[ebp - 0x4], ebx //保存到[ebp - 0x4]
		inc ecx
		jmp tag_loop //继续循环
	tag_out_loop:
		mov eax,[ebp - 0x4]
		pop edx
		pop ecx
		pop ebx
		pop esi
		mov esp, ebp
		pop ebp
		retn 0x4
	}
}

DWORD getHashCode(const char* strname)
{
	DWORD digest = 0;
	while (*strname)
	{
		digest = (digest << 25 | digest >> 7);
		digest = digest + *strname;
		strname++;
	}
	return digest;
}

int main_hash() {
	
	//__asm {
	//	lea eax, strname
	//	push eax
	//	call hashcode
	//}

	 // 声明 strname 一次，大小足够容纳最长的字符串 ("CreateProcessA" 是 14 个字符 + 空终止符 = 15)
	char strname[20]; // 例如，20 字节是一个合理的大小

	// --- LoadLibraryA ---
	strcpy(strname, "LoadLibraryA");
	DWORD hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);
	// 栈上分配的数组不需要 delete[]！

	// --- ExitProcess ---
	strcpy(strname, "ExitProcess");
	hash = getHashCode(strname); // 重新使用 hash 变量
	printf("%s %x\n", strname, hash);

	// --- WSAStartup ---
	strcpy(strname, "WSAStartup");
	hash = getHashCode(strname); // 重新使用 hash 变量
	printf("%s %x\n", strname, hash);

	// --- WSASocketA ---
	strcpy(strname, "WSASocketA");
	hash = getHashCode(strname); // 重新使用 hash 变量
	printf("%s %x\n", strname, hash);

	// --- bind ---
	strcpy(strname, "bind");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);

	// --- listen ---
	strcpy(strname, "listen");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);

	// --- accept ---
	strcpy(strname, "accept");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);

	// --- CreateProcessA ---
	strcpy(strname, "CreateProcessA");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);

	// --- CloseHandle ---
	strcpy(strname, "CloseHandle");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);

	// --- closesocket ---
	strcpy(strname, "closesocket");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);

	//WSACleanup
	strcpy(strname, "WSACleanup");
	hash = getHashCode(strname);
	printf("%s %x\n", strname, hash);


	//LoadLibraryA c917432 kernel32/kernelbase
	// 
	//ExitProcess 4fd18963 kernel32.dll
	//WSAStartup 80b46a3d ws2_32.dll
	//WSASocketA de78322d ws2_32.dll
	//bind dda71064 ws2_32.dll
	//listen 4bd39f0c ws2_32.dll
	//accept 1971eb1 ws2_32.dll
	//CreateProcessA 6ba6bcc9 kernel32.dll
	//CloseHandle ff0d6657 kernel32.dll
	//closesocket d1290f4c ws2_32.dll
	//WSACleanup 7c9be27c ws2_32.dll


	return 0;
}